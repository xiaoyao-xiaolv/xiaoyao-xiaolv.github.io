<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux查看系统参数</title>
      <link href="/2019/09/09/010%E3%80%81Linux%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%8F%82%E6%95%B0/"/>
      <url>/2019/09/09/010%E3%80%81Linux%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%8F%82%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>以下所有示例均在CentOS7版本上验证。</p><h1 id="系统信息查看"><a href="#系统信息查看" class="headerlink" title="系统信息查看"></a>系统信息查看</h1><h2 id="系统版本查看"><a href="#系统版本查看" class="headerlink" title="系统版本查看"></a>系统版本查看</h2><h3 id="方法1："><a href="#方法1：" class="headerlink" title="方法1："></a>方法1：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[lv@xiaoyao ~]$ cat /etc/redhat-release </span><br><span class="line">CentOS Linux release <span class="number">7.4</span><span class="number">.1708</span> (Core)</span><br></pre></td></tr></table></figure><a id="more"></a><p>当前系统发行版为：CentOS 7.4</p><h3 id="方法2："><a href="#方法2：" class="headerlink" title="方法2："></a>方法2：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[lv@xiaoyao ~]$ cat /proc/version </span><br><span class="line">Linux version <span class="number">3.10</span><span class="number">.0</span><span class="number">-693.</span>el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version <span class="number">4.8</span><span class="number">.5</span> <span class="number">20150623</span> (Red Hat <span class="number">4.8</span><span class="number">.5</span><span class="number">-16</span>) (GCC) ) <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017</span></span><br></pre></td></tr></table></figure><p>其中：3.10.0-693.el7.x86_64</p><ul><li>系统内核主版本为：3，10是偶数,说明该内核是稳定版；奇数代表开发版。</li><li>0-693，代表修补的次数。</li><li>el7，代表是RHEL7系列。</li><li>x86_64，代表该系统是64位系统。<h3 id="方法3："><a href="#方法3：" class="headerlink" title="方法3："></a>方法3：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[lv@xiaoyao ~]$ uname -a</span><br><span class="line">Linux xiaoyao <span class="number">3.10</span><span class="number">.0</span><span class="number">-693.</span>el7.x86_64 <span class="comment">#1 SMP Tue Aug 22 21:09:27 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure></li></ul><p>此方法与方法二类似，都可以用来查看系统内核版本。</p><h2 id="硬件配置查看"><a href="#硬件配置查看" class="headerlink" title="硬件配置查看"></a>硬件配置查看</h2><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/proc/cpuinfo       <span class="comment"># 查看CPU信息</span></span><br><span class="line">$ hostname                    <span class="comment"># 查看计算机名</span></span><br><span class="line">$ lspci -tv                   <span class="comment"># 列出所有PCI设备 </span></span><br><span class="line">$ lsusb -tv                   <span class="comment"># 列出所有USB设备 </span></span><br><span class="line">$ lsmod                       <span class="comment"># 列出加载的内核模块</span></span><br><span class="line">$ env                         <span class="comment"># 查看环境变量</span></span><br></pre></td></tr></table></figure><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ free -m                     <span class="comment"># 查看内存使用情况和交换区使用量</span></span><br><span class="line">$ df -h                       <span class="comment"># 查看各分区使用情况</span></span><br><span class="line">$ df -sh &lt;目录名&gt;              <span class="comment"># 查看指定目录的大小</span></span><br><span class="line">$ grep MemTotal /proc/meminfo <span class="comment"># 查看内存总量 </span></span><br><span class="line">$ grep MemFree /proc/meminfo  <span class="comment"># 查看空闲内存量 </span></span><br><span class="line">$ cat /proc/loadavg           <span class="comment"># 查看系统负载</span></span><br><span class="line">$ uptime                      <span class="comment"># 查看各分区使用情况</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[lv@xiaoyao ~]$ uptime </span><br><span class="line"><span class="number">17</span>:<span class="number">48</span>:<span class="number">52</span> up  <span class="number">1</span>:<span class="number">26</span>,  <span class="number">1</span> user,  load average: <span class="number">0.00</span>, <span class="number">0.01</span>, <span class="number">0.05</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 17:48:52                         系统当前时间</span></span><br><span class="line"><span class="comment"># up 1:26                          主机已运行时间,时间越大，说明你的机器越稳定。</span></span><br><span class="line"><span class="comment"># 1 user                           用户连接数，是总连接数而不是用户数</span></span><br><span class="line"><span class="comment"># load average: 0.00, 0.01, 0.05   系统平均负载，统计最近1，5，15分钟的系统平均负载</span></span><br><span class="line"><span class="comment">#系统平均负载是指在特定时间间隔内运行队列中的平均进程数。</span></span><br><span class="line"><span class="comment">#如果每个CPU内核的当前活动进程数不大于3的话，那么系统的性能是良好的。如果每个CPU内核的任务数大于5，那么这台机器的性能有严重问题。</span></span><br></pre></td></tr></table></figure><h3 id="磁盘和分区"><a href="#磁盘和分区" class="headerlink" title="磁盘和分区"></a>磁盘和分区</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ mount | column -t            <span class="comment"># 查看挂接的分区状态</span></span><br><span class="line">$ fdisk -l                     <span class="comment"># 查看所有分区</span></span><br><span class="line">$ swapon -s                    <span class="comment"># 查看所有交换分区</span></span><br><span class="line">$ hdparm -i /dev/hda           <span class="comment"># 查看磁盘参数（仅适用于IDE设备）</span></span><br><span class="line">$ dmesg | grep IDE             <span class="comment"># 查看启动时IDE设备检测状况</span></span><br></pre></td></tr></table></figure><h3 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig                <span class="comment"># 查看所有网络接口的属性</span></span><br><span class="line">$ iptables -L             <span class="comment"># 查看防火墙设置</span></span><br><span class="line">$ route -n                <span class="comment"># 查看路由表</span></span><br><span class="line">$ netstat -lntp           <span class="comment"># 查看所有监听端口</span></span><br><span class="line">$ netstat -antp           <span class="comment"># 查看所有已经建立的连接</span></span><br><span class="line">$ netstat -s              <span class="comment"># 查看网络统计信息</span></span><br></pre></td></tr></table></figure><h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef                  <span class="comment"># 查看所有进程</span></span><br><span class="line">$ top                     <span class="comment"># 实时显示进程状态</span></span><br></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ w                           <span class="comment"># 查看活动用户</span></span><br><span class="line">$ id &lt;用户名&gt;                  <span class="comment"># 查看指定用户信息</span></span><br><span class="line">$ last                        <span class="comment"># 查看用户登录日志</span></span><br><span class="line">$ cut -d: -f1 /etc/passwd     <span class="comment"># 查看系统所有用户</span></span><br><span class="line">$ cut -d: -f1 /etc/group      <span class="comment"># 查看系统所有组</span></span><br><span class="line">$ crontab -l                  <span class="comment"># 查看当前用户的计划任务</span></span><br></pre></td></tr></table></figure><h3 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chkconfig --list            <span class="comment"># 列出所有系统服务</span></span><br><span class="line">$ chkconfig --list | grep on  <span class="comment"># 列出所有启动的系统服务</span></span><br></pre></td></tr></table></figure><h3 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa                     <span class="comment"># 查看所有安装的软件包</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node.js环境安装和配置</title>
      <link href="/2019/08/28/002%E3%80%81Node.js%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/08/28/002%E3%80%81Node.js%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="一、安装包下载"><a href="#一、安装包下载" class="headerlink" title="一、安装包下载"></a>一、安装包下载</h1><p>Node.js安装包及源码下载地址为:<br><a href="https://nodejs.org/en/download/" class="LinkCard" target="_blank" rel="noopener">Node.js安装包及源码下载地址</a></p><p><img src="https://raw.githubusercontent.com/xiaoyao-xiaolv/Gallery/master/Hexo/002/nodejs.png" alt="Node.js安装包"></p><p>根据操作系统选择需要的Node.js安装包</p><a id="more"></a><h1 id="二、Win10安装Node-js"><a href="#二、Win10安装Node-js" class="headerlink" title="二、Win10安装Node.js"></a>二、Win10安装Node.js</h1><ul><li>1、下载zip解压版 </li></ul><p>进入Node.js下载页，选择LTS下Win系统的.zip版本安装包下载。</p><p>将安装包拷贝到指定文件夹进行解压。</p><ul><li>2、环境变量配置</li></ul><p>添加Node和npm命令到PATH环境变量中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH变量增加Node.js安装路径。例： D:\SoftWare\node-v10<span class="number">.16</span><span class="number">.0</span>-win-x64</span><br></pre></td></tr></table></figure><p>查看是否安装成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、查看node版本：node -v</span><br><span class="line"><span class="number">2</span>、查看npm版本：npm -v</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaoyao-xiaolv/Gallery/master/Hexo/002/version.png" alt="版本查看"></p><p>设置npm全局安装目录与缓存目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix <span class="string">"D:\SoftWare\node-v10.16.0-win-x64\node_global"</span></span><br><span class="line">npm config set cache <span class="string">"D:\SoftWare\node-v10.16.0-win-x64\node_cache"</span></span><br></pre></td></tr></table></figure><p>修改环境变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PATH变量增加： D:\SoftWare\node-v10<span class="number">.16</span><span class="number">.0</span>-win-x64\node_global</span><br><span class="line">新建NODE_PATH：  D:\SoftWare\node-v10<span class="number">.16</span><span class="number">.0</span>-win-x64\node_modules</span><br></pre></td></tr></table></figure><h1 id="三、测试验证"><a href="#三、测试验证" class="headerlink" title="三、测试验证"></a>三、测试验证</h1><p>配置完成后，安装个module测试验证一下，安装最常用的express模块，打开cmd窗口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install express -g <span class="comment"># -g是全局安装</span></span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/xiaoyao-xiaolv/Gallery/master/Hexo/002/express.png" alt="安装模块"></p><p>打开全局安装目录可以看到已安装的express模块，如图：</p><p><img src="https://raw.githubusercontent.com/xiaoyao-xiaolv/Gallery/master/Hexo/002/express_module.png" alt="安装成功"></p>]]></content>
      
      
      <categories>
          
          <category> Node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Node.js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建个人博客:环境安装搭建</title>
      <link href="/2019/08/22/001%E3%80%81Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/08/22/001%E3%80%81Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E5%88%97%EF%BC%9A%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="一、基本环境"><a href="#一、基本环境" class="headerlink" title="一、基本环境"></a>一、基本环境</h1><h2 id="1、Node-js环境安装和配置"><a href="#1、Node-js环境安装和配置" class="headerlink" title="1、Node.js环境安装和配置"></a>1、Node.js环境安装和配置</h2><p><a href="https://xiaoyao-xiaolv.github.io" class="LinkCard">Node.js安装配置</a></p><h2 id="2、Git环境安装和配置"><a href="#2、Git环境安装和配置" class="headerlink" title="2、Git环境安装和配置"></a>2、Git环境安装和配置</h2><p><a href="https://xiaoyao-xiaolv.github.io" class="LinkCard">Git安装配置</a></p><a id="more"></a><h1 id="二、Hexo安装使用"><a href="#二、Hexo安装使用" class="headerlink" title="二、Hexo安装使用"></a>二、Hexo安装使用</h1><h2 id="1、Hexo全局安装"><a href="#1、Hexo全局安装" class="headerlink" title="1、Hexo全局安装"></a>1、Hexo全局安装</h2><p>win在cmd命令行中通过npm安装Hexo，-g表示全局安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="三、创建GitHub仓库"><a href="#三、创建GitHub仓库" class="headerlink" title="三、创建GitHub仓库"></a>三、创建GitHub仓库</h1><h2 id="1、创建项目"><a href="#1、创建项目" class="headerlink" title="1、创建项目"></a>1、创建项目</h2>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
